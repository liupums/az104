{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.4.63.48766",
      "templateHash": "14839371054991775631"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "westus",
      "metadata": {
        "description": "Specify the location for the Virtual Network and its related resources"
      }
    },
    "resoureGroupName": {
      "type": "string",
      "defaultValue": "hubSpokeNva",
      "metadata": {
        "description": "Specify the resource group name"
      }
    },
    "adminPublicKey": {
      "type": "string",
      "metadata": {
        "description": "Specify the admin public key"
      }
    },
    "cloudInit": {
      "type": "string",
      "metadata": {
        "description": "Specify the Linux VM cloud-init.txt"
      }
    }
  },
  "functions": [],
  "variables": {
    "vNetHubDefinitions": {
      "name": "hub",
      "location": "[parameters('location')]",
      "createUserDefinedRoutes": true,
      "addressSpacePrefix": "192.168.0.0/20",
      "subnets": [
        {
          "name": "AzureFirewallSubnet",
          "subnetPrefix": "192.168.0.0/26"
        },
        {
          "name": "AzureBastionSubnet",
          "subnetPrefix": "192.168.0.64/28"
        },
        {
          "name": "GatewaySubnet",
          "subnetPrefix": "192.168.0.96/27"
        }
      ]
    },
    "vNetSpokeDefinitions": [
      {
        "name": "spokeProd",
        "location": "[parameters('location')]",
        "addressSpacePrefix": "10.0.0.0/16",
        "subnets": [
          {
            "name": "subnet1",
            "subnetPrefix": "10.0.0.0/24"
          }
        ]
      },
      {
        "name": "spokeTest",
        "location": "[parameters('location')]",
        "addressSpacePrefix": "10.1.0.0/16",
        "subnets": [
          {
            "name": "subnet1",
            "subnetPrefix": "10.1.0.0/24"
          }
        ]
      }
    ]
  },
  "resources": [
    {
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2020-06-01",
      "name": "[parameters('resoureGroupName')]",
      "location": "[parameters('location')]"
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "vnetname",
      "resourceGroup": "[parameters('resoureGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "vNetHubDefinitions": {
            "value": "[variables('vNetHubDefinitions')]"
          },
          "vNetSpokeDefinitions": {
            "value": "[variables('vNetSpokeDefinitions')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.63.48766",
              "templateHash": "5624883429114368108"
            }
          },
          "parameters": {
            "vNetHubDefinitions": {
              "type": "object"
            },
            "vNetSpokeDefinitions": {
              "type": "array"
            }
          },
          "functions": [],
          "resources": [
            {
              "type": "Microsoft.Network/virtualNetworks",
              "apiVersion": "2020-05-01",
              "name": "[parameters('vNetHubDefinitions').name]",
              "location": "[parameters('vNetHubDefinitions').location]",
              "properties": {
                "copy": [
                  {
                    "name": "subnets",
                    "count": "[length(parameters('vNetHubDefinitions').subnets)]",
                    "input": {
                      "name": "[parameters('vNetHubDefinitions').subnets[copyIndex('subnets')].name]",
                      "properties": {
                        "addressPrefix": "[parameters('vNetHubDefinitions').subnets[copyIndex('subnets')].subnetPrefix]"
                      }
                    }
                  }
                ],
                "addressSpace": {
                  "addressPrefixes": [
                    "[parameters('vNetHubDefinitions').addressSpacePrefix]"
                  ]
                }
              }
            },
            {
              "condition": "[parameters('vNetHubDefinitions').createUserDefinedRoutes]",
              "type": "Microsoft.Network/routeTables",
              "apiVersion": "2020-06-01",
              "name": "RouteToFirewall",
              "location": "[parameters('vNetHubDefinitions').location]",
              "properties": {
                "routes": [
                  {
                    "name": "udrRouteName",
                    "properties": {
                      "addressPrefix": "0.0.0.0/0",
                      "nextHopType": "VirtualAppliance",
                      "nextHopIpAddress": "[reference(resourceId('Microsoft.Resources/deployments', 'hubFirewall'), '2019-10-01').outputs.firewallPrivateIp.value]"
                    }
                  }
                ],
                "disableBgpRoutePropagation": false
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'hubFirewall')]"
              ]
            },
            {
              "copy": {
                "name": "vNetSpokeResources",
                "count": "[length(parameters('vNetSpokeDefinitions'))]"
              },
              "type": "Microsoft.Network/virtualNetworks",
              "apiVersion": "2020-05-01",
              "name": "[parameters('vNetSpokeDefinitions')[copyIndex()].name]",
              "location": "[parameters('vNetSpokeDefinitions')[copyIndex()].location]",
              "properties": {
                "copy": [
                  {
                    "name": "subnets",
                    "count": "[length(parameters('vNetSpokeDefinitions')[copyIndex()].subnets)]",
                    "input": {
                      "name": "[parameters('vNetSpokeDefinitions')[copyIndex()].subnets[copyIndex('subnets')].name]",
                      "properties": {
                        "addressPrefix": "[parameters('vNetSpokeDefinitions')[copyIndex()].subnets[copyIndex('subnets')].subnetPrefix]",
                        "routeTable": {
                          "id": "[resourceId('Microsoft.Network/routeTables', 'RouteToFirewall')]"
                        }
                      }
                    }
                  }
                ],
                "addressSpace": {
                  "addressPrefixes": [
                    "[parameters('vNetSpokeDefinitions')[copyIndex()].addressSpacePrefix]"
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/routeTables', 'RouteToFirewall')]"
              ]
            },
            {
              "copy": {
                "name": "spokeToHubPeering",
                "count": "[length(parameters('vNetSpokeDefinitions'))]"
              },
              "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
              "apiVersion": "2020-05-01",
              "name": "[format('{0}/{1}', parameters('vNetSpokeDefinitions')[copyIndex()].name, format('spokeToHub-{0}', parameters('vNetSpokeDefinitions')[copyIndex()].name))]",
              "properties": {
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": true,
                "allowGatewayTransit": false,
                "useRemoteGateways": false,
                "remoteVirtualNetwork": {
                  "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vNetHubDefinitions').name)]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('vNetHubDefinitions').name)]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('vNetSpokeDefinitions')[copyIndex()].name)]"
              ]
            },
            {
              "copy": {
                "name": "hubToSpokePeering",
                "count": "[length(parameters('vNetSpokeDefinitions'))]"
              },
              "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
              "apiVersion": "2020-05-01",
              "name": "[format('{0}/{1}', parameters('vNetHubDefinitions').name, format('hubToSpoke-{0}', parameters('vNetSpokeDefinitions')[copyIndex()].name))]",
              "properties": {
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": true,
                "allowGatewayTransit": false,
                "useRemoteGateways": false,
                "remoteVirtualNetwork": {
                  "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vNetSpokeDefinitions')[copyIndex()].name)]"
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('vNetHubDefinitions').name)]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('vNetSpokeDefinitions')[copyIndex()].name)]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2019-10-01",
              "name": "hubFirewall",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "firewallDefinitions": {
                    "value": {
                      "name": "hub-firewall",
                      "publicIPAddressName": "hub-firewall-pip",
                      "location": "[parameters('vNetHubDefinitions').location]",
                      "subnet": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('vNetHubDefinitions').name)).subnets[0].id]",
                      "allowedOutbound": [
                        "10.1.0.0/24"
                      ],
                      "snatVmIp": "10.1.0.4"
                    }
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.63.48766",
                      "templateHash": "6318751824353821678"
                    }
                  },
                  "parameters": {
                    "firewallDefinitions": {
                      "type": "object"
                    }
                  },
                  "functions": [],
                  "resources": [
                    {
                      "type": "Microsoft.Network/publicIPAddresses",
                      "apiVersion": "2019-11-01",
                      "name": "[parameters('firewallDefinitions').publicIPAddressName]",
                      "location": "[parameters('firewallDefinitions').location]",
                      "sku": {
                        "name": "Standard"
                      },
                      "properties": {
                        "publicIPAllocationMethod": "Static"
                      }
                    },
                    {
                      "type": "Microsoft.Network/azureFirewalls",
                      "apiVersion": "2020-05-01",
                      "name": "[parameters('firewallDefinitions').name]",
                      "location": "[parameters('firewallDefinitions').location]",
                      "properties": {
                        "sku": {
                          "name": "AZFW_VNet",
                          "tier": "Standard"
                        },
                        "threatIntelMode": "Alert",
                        "ipConfigurations": [
                          {
                            "name": "[parameters('firewallDefinitions').name]",
                            "properties": {
                              "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('firewallDefinitions').publicIPAddressName)]"
                              },
                              "subnet": {
                                "id": "[parameters('firewallDefinitions').subnet]"
                              }
                            }
                          }
                        ],
                        "networkRuleCollections": [
                          {
                            "name": "Allow-test-outbound",
                            "properties": {
                              "priority": 200,
                              "action": {
                                "type": "Allow"
                              },
                              "rules": [
                                {
                                  "name": "allow-subnet-outbound",
                                  "protocols": [
                                    "Any"
                                  ],
                                  "sourceAddresses": "[parameters('firewallDefinitions').allowedOutbound]",
                                  "destinationAddresses": [
                                    "*"
                                  ],
                                  "destinationPorts": [
                                    "*"
                                  ]
                                }
                              ]
                            }
                          }
                        ],
                        "natRuleCollections": [
                          {
                            "name": "allowSSH",
                            "properties": {
                              "priority": 200,
                              "action": {
                                "type": "Dnat"
                              },
                              "rules": [
                                {
                                  "name": "allowSshToTest",
                                  "protocols": [
                                    "TCP"
                                  ],
                                  "translatedAddress": "[parameters('firewallDefinitions').snatVmIp]",
                                  "translatedPort": "22",
                                  "sourceAddresses": [
                                    "*"
                                  ],
                                  "destinationAddresses": [
                                    "[reference(resourceId('Microsoft.Network/publicIPAddresses', parameters('firewallDefinitions').publicIPAddressName)).ipAddress]"
                                  ],
                                  "destinationPorts": [
                                    "22"
                                  ]
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/publicIPAddresses', parameters('firewallDefinitions').publicIPAddressName)]"
                      ]
                    }
                  ],
                  "outputs": {
                    "firewallPrivateIp": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Network/azureFirewalls', parameters('firewallDefinitions').name)).ipConfigurations[0].properties.privateIPAddress]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('vNetHubDefinitions').name)]"
              ]
            }
          ],
          "outputs": {
            "properties": {
              "type": "object",
              "value": {
                "vNetHubId": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vNetHubDefinitions').name)]",
                "routeTableId": "[resourceId('Microsoft.Network/routeTables', 'RouteToFirewall')]"
              }
            },
            "vNETSpokeSettings": {
              "type": "array",
              "copy": {
                "count": "[length(parameters('vNetSpokeDefinitions'))]",
                "input": {
                  "subnets": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('vNetSpokeDefinitions')[copyIndex()].name)).subnets]"
                }
              }
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('resoureGroupName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "linuxVms",
      "resourceGroup": "[parameters('resoureGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "virtualMachineDefinitions": {
            "value": [
              {
                "name": "LinuxProd1",
                "subnet": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resoureGroupName')), 'Microsoft.Resources/deployments', 'vnetname'), '2019-10-01').outputs.vNETSpokeSettings.value[0].subnets[0].id]",
                "vmSize": "Standard_A1_v2",
                "cloudInit": "[parameters('cloudInit')]"
              },
              {
                "name": "LinuxTest1",
                "subnet": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resoureGroupName')), 'Microsoft.Resources/deployments', 'vnetname'), '2019-10-01').outputs.vNETSpokeSettings.value[1].subnets[0].id]",
                "vmSize": "Standard_A1_v2",
                "cloudInit": "[parameters('cloudInit')]"
              }
            ]
          },
          "adminUsername": {
            "value": "azureuser"
          },
          "adminPublicKey": {
            "value": "[parameters('adminPublicKey')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.63.48766",
              "templateHash": "6437723651147071053"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Location of the resources"
              }
            },
            "virtualMachineDefinitions": {
              "type": "array"
            },
            "adminUsername": {
              "type": "string",
              "metadata": {
                "description": "Specifies a username for the Virtual Machine."
              }
            },
            "adminPublicKey": {
              "type": "string",
              "metadata": {
                "description": "Specifies the SSH rsa public key file as a string. Use \"ssh-keygen -t rsa -b 2048\" to generate your SSH key pairs."
              }
            }
          },
          "functions": [],
          "resources": [
            {
              "copy": {
                "name": "publicIPAddressName",
                "count": "[length(parameters('virtualMachineDefinitions'))]"
              },
              "type": "Microsoft.Network/publicIPAddresses",
              "apiVersion": "2020-05-01",
              "name": "[format('{0}-pip', parameters('virtualMachineDefinitions')[copyIndex()].name)]",
              "location": "[parameters('location')]",
              "properties": {
                "publicIPAllocationMethod": "Dynamic"
              },
              "sku": {
                "name": "Basic"
              }
            },
            {
              "copy": {
                "name": "nicNameLinuxResource",
                "count": "[length(parameters('virtualMachineDefinitions'))]"
              },
              "type": "Microsoft.Network/networkInterfaces",
              "apiVersion": "2020-05-01",
              "name": "[parameters('virtualMachineDefinitions')[copyIndex()].name]",
              "location": "[parameters('location')]",
              "properties": {
                "ipConfigurations": [
                  {
                    "name": "ipconfig",
                    "properties": {
                      "privateIPAllocationMethod": "Dynamic",
                      "publicIPAddress": {
                        "id": "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}-pip', parameters('virtualMachineDefinitions')[copyIndex()].name))]"
                      },
                      "subnet": {
                        "id": "[parameters('virtualMachineDefinitions')[copyIndex()].subnet]"
                      }
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}-pip', parameters('virtualMachineDefinitions')[copyIndex()].name))]"
              ]
            },
            {
              "copy": {
                "name": "vmNameLinuxResource",
                "count": "[length(parameters('virtualMachineDefinitions'))]"
              },
              "type": "Microsoft.Compute/virtualMachines",
              "apiVersion": "2019-07-01",
              "name": "[parameters('virtualMachineDefinitions')[copyIndex()].name]",
              "location": "[parameters('location')]",
              "properties": {
                "hardwareProfile": {
                  "vmSize": "[parameters('virtualMachineDefinitions')[copyIndex()].vmSize]"
                },
                "osProfile": {
                  "computerName": "[parameters('virtualMachineDefinitions')[copyIndex()].name]",
                  "adminUsername": "[parameters('adminUsername')]",
                  "customData": "[parameters('virtualMachineDefinitions')[copyIndex()].cloudInit]",
                  "linuxConfiguration": {
                    "disablePasswordAuthentication": true,
                    "ssh": {
                      "publicKeys": [
                        {
                          "path": "[format('/home/{0}/.ssh/authorized_keys', parameters('adminUsername'))]",
                          "keyData": "[parameters('adminPublicKey')]"
                        }
                      ]
                    }
                  }
                },
                "storageProfile": {
                  "imageReference": {
                    "publisher": "Canonical",
                    "offer": "UbuntuServer",
                    "sku": "18.04-LTS",
                    "version": "latest"
                  },
                  "osDisk": {
                    "createOption": "FromImage"
                  }
                },
                "networkProfile": {
                  "networkInterfaces": [
                    {
                      "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('virtualMachineDefinitions')[copyIndex()].name)]"
                    }
                  ]
                }
              },
              "dependsOn": [
                "nicNameLinuxResource"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('resoureGroupName'))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('resoureGroupName')), 'Microsoft.Resources/deployments', 'vnetname')]"
      ]
    }
  ]
}